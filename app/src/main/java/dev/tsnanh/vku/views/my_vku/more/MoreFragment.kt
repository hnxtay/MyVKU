/* * Copyright (c) 2020 My VKU by tsnAnh */package dev.tsnanh.vku.views.my_vku.moreimport android.content.Intentimport android.os.Bundleimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.core.content.editimport androidx.databinding.DataBindingUtilimport androidx.fragment.app.Fragmentimport androidx.fragment.app.viewModelsimport androidx.lifecycle.Observerimport androidx.navigation.fragment.findNavControllerimport androidx.preference.PreferenceManagerimport com.google.android.gms.auth.api.signin.GoogleSignInimport com.google.android.gms.auth.api.signin.GoogleSignInClientimport com.google.android.gms.auth.api.signin.GoogleSignInOptionsimport com.google.android.material.dialog.MaterialAlertDialogBuilderimport com.google.android.material.transition.MaterialFadeThroughimport dev.tsnanh.vku.Rimport dev.tsnanh.vku.activities.ElearningMainActivityimport dev.tsnanh.vku.activities.WelcomeActivityimport dev.tsnanh.vku.databinding.FragmentMoreBindingimport dev.tsnanh.vku.viewmodels.my_vku.MoreViewModelclass MoreFragment : Fragment() {    private lateinit var binding: FragmentMoreBinding    private val viewModel: MoreViewModel by viewModels()    private lateinit var mGoogleSignInClient: GoogleSignInClient    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        enterTransition = MaterialFadeThrough()        exitTransition = MaterialFadeThrough()    }    override fun onCreateView(        inflater: LayoutInflater,        container: ViewGroup?,        savedInstanceState: Bundle?    ): View? {        binding = DataBindingUtil            .inflate(inflater, R.layout.fragment_more, container, false)        return binding.root    }    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {        super.onViewCreated(view, savedInstanceState)        binding.viewModel = viewModel        val gso = GoogleSignInOptions.Builder()            .requestId()            .requestIdToken(getString(R.string.server_client_id))            .requestProfile()            .requestEmail()            .build()        mGoogleSignInClient = GoogleSignIn.getClient(requireContext(), gso)        val account = GoogleSignIn.getLastSignedInAccount(requireContext())        binding.user = account        viewModel.navigateToSettings.observe(viewLifecycleOwner, Observer {            it?.let {                findNavController().navigate(MoreFragmentDirections.activitySettings())                viewModel.onNavigatedToSettings()            }        })        viewModel.navigateToTeacherEvaluation.observe(viewLifecycleOwner, Observer {            it?.let {                findNavController().navigate(                    MoreFragmentDirections.actionNavigationMoreToNavigationTeacherEvaluation()                )                viewModel.onNavigatedToTeacherEvaluation()            }        })        viewModel.signOut.observe(viewLifecycleOwner, Observer {            it?.let {                val builder = MaterialAlertDialogBuilder(requireContext())                    .setTitle(requireContext().getString(R.string.text_sign_out))                    .setMessage(getString(R.string.text_are_u_sure))                    .setPositiveButton(requireContext().getString(R.string.text_ok)) { dialog, _ ->                        mGoogleSignInClient.signOut().addOnCompleteListener { task ->                            if (task.isComplete) {                                dialog.dismiss()                                startActivity(Intent(requireContext(), WelcomeActivity::class.java))                                requireActivity().finish()                            }                        }                    }                    .setNegativeButton(requireContext().getString(R.string.text_cancel)) { dialog, _ ->                        dialog.dismiss()                    }                builder.create().show()                viewModel.onSignedOut()            }        })        viewModel.navigateToElearning.observe(viewLifecycleOwner, Observer {            it?.let {                val sharedPreferences =                    PreferenceManager.getDefaultSharedPreferences(requireContext())                sharedPreferences.edit {                    putBoolean(requireContext().getString(R.string.elearning_mode), true)                }                startActivity(Intent(requireContext(), ElearningMainActivity::class.java))                viewModel.onNavigatedToElearning()                requireActivity().finish()            }        })    }}